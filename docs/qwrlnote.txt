
- "crosshaircolor" controls the color for the crosshair in "crosshair 2"
  Values are 0 through 255 and represent a color in the palette.
- "cl_chasecam 1" while in spectator mode gives a through-the-eyes view
  of the player.
- gl_cshiftpercent controls the blend precentage in GLQWCL (default 100).
- Packet loss meter added to player scoreboard, "PL" is the column title.
  This indicates the amount of packet loss the player is receiving.

- infokey(self, "ip") and infokey(self, "ping") return expected values as 
strings (use stof for ping).
- sv_mapcheck controls map checksumming.  Vis data is not included in the 
checksum with 2.21 clients.

- CVar cl_maxfps added that controls the max fps rate independant of rate (it 
defaults to zero, which means rate controlled).  PLEASE NOTE:  Setting 
cl_maxfps to high values on a modem will OVERRUN YOUR MODEM and lag you since a 
packet is sent every frame, resulting in your sending more data than your modem 
can handle.  This is why fps was tied to rate in the first place.

Fixed/Changed:
- Packets are now restricted to 1500 bytes for broken routers.
- Server signon sequence changed to multipart due to new packet size 
  limitations
- Autoaim is off by default in the server (sv_aim 2)
- Serverinfo watervis controls whether clients with GLQWCL can enable 
  r_wateralpha

New:
- You can now specify the size of the console in the GL version.  For example,
  if you want a 320x200 console, put "-conwidth 320" on the command line.
  -conheight is also supported, but if unspecified it will automatically use
  a 4:3 aspect.  I.e., -conwidth 512 defaults to -conheight 384.  In high
  resolution modes such as 800x600 and 1024x768, the console defaults to
  640x480, otherwise the font and status bar become too small to read.  If
  you do want a higher resolution console in those modes, specify it as well:
  glqwcl -width 800 -height 600 -conwidth 800
  Note that not all cards support modes higher than 640x480.
- GL_SGIS_multitexture is now supported.  This allows some hardware that can
  blend textures together to render the world in one pass instead of two
  (world textures for one pass, lightmaps for the second).  You need a card
  such as a 3DFX VooDoo with two TMU units in order to take advantage of
  this.  If you have the required hardware, you will get a 60 to 100%
  improvement in rendering speed.

- Win32 -heapsize <kb>/-mem <mb> options were broken

New:
- Added alternate crosshair.  Enabled with "crosshair 2".
- Added SpectatorConnect, SpectatorThink and SpectatorDisconnect Quake-C
  functions.  They are empty shells for now (a example of moving spectators
  from point to point is included with impulse 1) but can be used in lots
  of ways.
  
New:
- Put support back in for -zone option
- Added rerecord <filename> to cause a reconnect with demo recording on the
  same server
- Added NOSKINS 2 to use but not download skins
- 8bit 3DFX texture support.  reduces texture thrashing due to way less 
  texture memory used.

2.00 Changes to QuakeWorld Server
---------------------------------

New:
- Added flood procection to the server
  default is 4 lines in 8 secs, wait for 10 on activation
  Command to change is:  floodprot <lines> <time> <wait-time>
- Added localinfo.  32k of key=value storage.  Values are stored with the
  localinfo console command on the server, i.e.
      localinfo e1m1 e1m2
  localinfo is persistant from the life of the server (between maps)
  progs can access localinfo using infokey(world, "key") and set it using
      localcmd("localinfo ");
      localcmd(key);
      localcmd(" ");
      localcmd(value);
      localcmd("\n");
  values with spaces should be quoted
  If the same key exists in serverinfo and localinfo, serverinfo will override
  localinfo is not visible 'outside' the server
- Using localinfo, you can now configure a series of maps to run without
  editing the quake-c.  usage:  localinfo <from-map> <to-map>.  For example,
  to run a server that loops through e1m2, dm2, dm4 and dm6, try this:
        localinfo e1m2 dm2
        localinfo dm2 dm4
        localinfo dm4 dm6
        localinfo dm6 e1m2
  Note that the last one should loop back to the first, otherwise normal
  level changing applies.  Put the localinfo commands in the server.cfg
- Full server controlled localized client maxspeed and gravity is in
  Create to new fields in the QC, .float gravity and .float maxspeed.  
  .maxspeed defaults to sv_maxspeed (320), .gravity defaults to 1.0 
  (full gravity).
  Change them at will in the QC, but don't change them too often as every 
  change is noted and the clients are updated with the change so that 
  their prediction works correctly.  The per-client maxspeed should be 
  very handy for the TF guys.
- added support for 'namefun' (high bit characters).  On by default, server
  operators can turn it off with sv_highchars 0

Fixed/Changed:
- sv_friction defaults to 6 as in previous QuakeWorld release.  Regular Quake
  uses a default friction of 4, so if the server op wants Regular Quake
  behavior, he can change it to 4.
- removed password from userinfo after player connect so that other
  players and spectators can't use the 'user' command to see the
  passwd
- setting password or spectator_password to 'none' is the same as
  clearing it

1.64 Changes to QuakeWorld Client
---------------------------------
New:
- Added +showteamscores.  In team games, the intermission displays team
  totals, unless you hit TAB to display frag scores
  bind a key to +showteamscores will give you the team score display.
- Added client side DEMO support and playback
  usage:  record <file> <server>
  Autodownload is disabled when recording.
  playback: playdemo <file>
  File uses the .qwd extension and is incompatible with regular Quake and its 
  demos.
- Add cl_hightrack cvar for spectator mode, causes it to always
  select camera view on player with the highest frags.  cl_hightrack 1 turns
  it on, cl_hightrack 0 turns it off (default)

Fixed/Changed:
- New cvar, cl_warncmd, defaults to zero and disables the 'unknown command'
  msg.  qwcl stuffs 'cl_warncmd 1' to itself after quake.rc loads. This gets
  rid of unknown command messages (like unknown command 'startdemos') from 
  the default exec files, as well as hiding "execing" messages.
- New command, windows, which will pop a user in fullscreen mode back to     
  Windows (not GL or Linux versions).
- Now execs the config.cfg in a gamedir upon receiving a new gamedir from
  the server (saves the current config into the current gamedir before
  switching to the new one).
- Fixed it so entering 'record <file> <server>' while connected disconnects 
  before starting recording.
- Fixed it so a 'glquake' directory is created in other gamedirs for model
  meshes in GL version.

New:
- Added new allow_download vars:
    allow_download_skins, allow_download_models,
    allow_download_sounds, allow_download_maps
- Adding new server cvar, sv_spectalk (defaults to 1, or on) that controls
  whether spectators can talk to players.  If disabled, spectators can
  only talk to each other.
- New command, sv_gamedir, which sets the visible gamedir to clients.  this
  allows servers to have a different physical game directories, handing for
  machines with multiple servers that don't support symbolic links.  for
  example:
          gamedir ctf4.1
        sv_gamedir ctf
  causes qwsv to use the physical directory of 'ctf4.1', but report the
  directory to clients (players) as 'ctf' for their files.

Fixed/Changed:
- Fixed bug in serverinfo strings (memory overwrite and length problem).
- Map files are permitted to be downloaded if they aren't in a pak file
  (unless allow_download or allow_download_maps isn't set).
- Fixed annoying NET_GetPacket: Connection Refused msgs.
- Fixed annoying water jump bug where you would immedately hop back out of 
  water just after you jumped in.
- Fixed air velocity movement so that it is like regular Quake, 
  players have more control over their air movement and can cut
  velocity as needed just like in Quake.  This gives more control
  to the player and rewards skill.
- Spectators no longer can send or receive say_team msgs (possible
  cheating could happen).
- Stopped reporting spectators as players when front-ends request info.
- Fixed bug that disallowed 9's in ip address for filtering.
- Spectators can now send say_team msgs, but only to other spectators.
- No duplicate names allowed now (will rename people who do it).
- A client can not name themselves 'console'.